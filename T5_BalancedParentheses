package StacksAndQueues_Ex;

import java.util.ArrayDeque;
import java.util.Scanner;

public class T5_BalancedParentheses {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        String[] input = scanner.nextLine().split("");

        ArrayDeque<String> stack = new ArrayDeque<>();
        ArrayDeque<String> queue = new ArrayDeque<>();

        boolean equals = false;

        for (int i = 0; i < input.length; i++) {
            if (input[i].equals("[") || input[i].equals("{") || input[i].equals("(")) {
                stack.push(input[i]);
            } else if (input[i].equals("]") || input[i].equals("}") || input[i].equals(")")){
                queue.offer(input[i]);
            }
        }
        if (stack.size() != queue.size()) {
            System.out.println("NO");
            return;
        }
        if (stack.isEmpty()){
            System.out.println("YES");
        }
        while (stack.size()>0){
            switch (stack.pop()) {
                case "(":
                    if (queue.poll().equals(")")) {
                        equals = true;
                    } else {
                        System.out.println("NO");
                        return;
                    }
                    break;
                case "[":
                    if (queue.poll().equals("]")) {
                        equals = true;
                    } else {
                        System.out.println("NO");
                        return;
                    }
                    break;
                case "{":
                    if ("}".equals(queue.poll())) {
                        equals = true;
                    } else {
                        System.out.println("NO");
                        return;
                    }
                    break;
            }
        }

        if (equals) {
            System.out.println("YES");
        }
    }
}
